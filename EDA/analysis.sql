-- Explore all object int the database
select * from INFORMATION_SCHEMA.TABLES;

-- Explore all columns in the Database
select * from INFORMATION_SCHEMA.COLUMNS
where TABLE_NAME='dim_customers';


-- 2. Dimenstion Explore 


-- explore all countries  our customer from 
select distinct country from gold.dim_customers;

-- Explore all categories "The Major Divisions"

select distinct category,subcategory ,product_name from gold.dim_products
order by 1,2,3

-- 3. Date Exploreation 

  
-- Earliest and latest dates 
SELECT 
min(order_date) first_order_date,
max(order_date) last_order_date,
datediff(month,min(order_Date),max(order_date)) as order_range_years
from gold.fact_sales


-- Youngest and Oldest customer 
SELECT 
min(birthdate) first_order_date,
datediff(year,min(birthdate),GETDATE()) as oldest_Age,
max(birthdate) last_order_date,
datediff(year,max(birthdate),GETDATE()) as youngest_Age
from gold.dim_customers


-- 4.  Measure Exploreation

  
-- Find the Total Sales 
select sum(sales_amount) as total_sales from gold.fact_sales
-- Find How many items are sold 
select sum(quantity) as total_quantity from gold.fact_sales
-- find the avg. saelling price 
select avg(price) as avg_price from gold.fact_sales
-- find the total number of orders 
select count(order_number) as total_order from gold.fact_sales
select count(distinct order_number) as total_order from gold.fact_sales

-- find the total number of products 
select count( product_name) as total_product from gold.dim_products;
select count(distinct product_name) as total_product from gold.dim_products
-- find the total number of customers 
select count( customer_key) as total_product from gold.dim_customers;
select count(distinct customer_key) as total_product from gold.dim_customers;
-- find the total number of customers that has placed an order 
select count(distinct customer_key) as total_product from gold.fact_sales;


-- Generate a Report that shows all key metrics of the business 

select 'Total Sales' as measure_name ,sum(sales_amount) as measure_value from gold.fact_sales
union all 
select 'Total quantity' as measure_name, sum(quantity) as measure_value from gold.fact_sales
union all 
select 'Avarage Price' as measure_name, avg(price) as measure_value from gold.fact_sales
union all 
select 'Total Number of Orders' as measure_name,count(distinct order_number) as measure_value from gold.fact_sales
union all 
select 'Total Number of product' as measure_name,count( product_name) as measure_value from gold.dim_products
union all 
select 'Total Number of Customer' as measure_name,count( customer_key) as measure_value from gold.dim_customers;



-- 5. Magnitude



-- Find total customer by countries 
select country , count(customer_key) as total_customer
from gold.dim_customers
group by  country
order by total_customer desc

-- find total coustomer by gender 
select gender , count(customer_key) as total_customer
from gold.dim_customers
group by  gender
order by total_customer desc

-- find total product by category 
select 
category,
count(product_key) as total_product
from gold.dim_products
group by category
order by total_product desc

-- what is the avg cost of each category
select 
category,
avg(cost) as avg_costs
from gold.dim_products
group by category
order by avg_costs desc

-- what is total revenue genrated for each category 
select 
p.category,
sum(f.sales_amount) total_revenue 
from gold.fact_sales f
LEFT JOIN gold.dim_products p
on p.product_key = f.product_key
group by p.category
order by total_revenue desc

-- what is the total revenie generated by each customer? 
select 
c.customer_key,
c.first_name,
c.last_name,
sum(f.sales_amount) total_revenue 
from gold.fact_sales f 
LEFT JOIN gold.dim_customers c 
on c.customer_key =f.customer_key
group by c.customer_key,c.first_name,c.last_name
order by total_revenue desc

-- what is distribution of sold items across countries 
SELECT
c.country,
sum(quantity) as total_sold_items
from gold.fact_sales f 
LEFT JOIN gold.dim_customers c 
on c.customer_key = f.customer_key
group by c.country
order by total_sold_items desc


-- 6. Ranking Top N , Botton N 


  
-- which 5 product generate high revenue 

select top 5
p.product_name,
sum(f.sales_amount) total_revenue 
from gold.fact_sales f
LEFT JOIN gold.dim_products p
on p.product_key = f.product_key
group by p.product_name
order by total_revenue desc

--    using window function 
select * 
from 
(
select 
p.product_name,
sum(f.sales_amount) total_revenue ,
ROW_NUMBER() OVER (order by sum(f.sales_amount) desc) as rank_product
from gold.fact_sales f
LEFT JOIN gold.dim_products p
on p.product_key = f.product_key
group by p.product_name

) t 
where rank_product <=5
-- which 5 product generate worst revenue 

select top 5
p.product_name,
sum(f.sales_amount) total_revenue 
from gold.fact_sales f
LEFT JOIN gold.dim_products p
on p.product_key = f.product_key
group by p.product_name
order by total_revenue desc
